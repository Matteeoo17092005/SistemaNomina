// <auto-generated />
using System;
using App.Nomina.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Nomina.Migrations
{
    [DbContext(typeof(NominaDbContext))]
    [Migration("20250904003817_AddEmpNoToUsers")]
    partial class AddEmpNoToUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("App.Nomina.Data.Entities.Department", b =>
                {
                    b.Property<string>("DeptNo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("DeptNo");

                    b.HasIndex("DeptName")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.DeptEmp", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int");

                    b.Property<string>("DeptNo")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EmpNo", "DeptNo", "FromDate");

                    b.HasIndex("DeptNo");

                    b.ToTable("DeptEmps");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.DeptManager", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int");

                    b.Property<string>("DeptNo")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EmpNo", "DeptNo", "FromDate");

                    b.HasIndex("DeptNo");

                    b.ToTable("DeptManagers");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.Employee", b =>
                {
                    b.Property<int>("EmpNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmpNo"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EmpNo");

                    b.HasIndex("Ci")
                        .IsUnique();

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.LogAuditoriaSalarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DetalleCambio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LogAuditoriaSalarios");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.Salary", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EmpNo", "FromDate");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.Title", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int");

                    b.Property<string>("TitleName")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EmpNo", "TitleName", "FromDate");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpNo")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.DeptEmp", b =>
                {
                    b.HasOne("App.Nomina.Data.Entities.Department", "Department")
                        .WithMany("DeptEmps")
                        .HasForeignKey("DeptNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Nomina.Data.Entities.Employee", "Employee")
                        .WithMany("DeptEmps")
                        .HasForeignKey("EmpNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.DeptManager", b =>
                {
                    b.HasOne("App.Nomina.Data.Entities.Department", "Department")
                        .WithMany("Managers")
                        .HasForeignKey("DeptNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Nomina.Data.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.Salary", b =>
                {
                    b.HasOne("App.Nomina.Data.Entities.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmpNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.Title", b =>
                {
                    b.HasOne("App.Nomina.Data.Entities.Employee", "Employee")
                        .WithMany("Titles")
                        .HasForeignKey("EmpNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.Department", b =>
                {
                    b.Navigation("DeptEmps");

                    b.Navigation("Managers");
                });

            modelBuilder.Entity("App.Nomina.Data.Entities.Employee", b =>
                {
                    b.Navigation("DeptEmps");

                    b.Navigation("Salaries");

                    b.Navigation("Titles");
                });
#pragma warning restore 612, 618
        }
    }
}
