@model int
@{
    ViewData["Title"] = "Asignar Salario";
}
<div class="row justify-content-center mt-5">
    <div class="col-md-6">
        <div class="card shadow-sm fade-in">
            <div class="card-body">
                <h2 class="mb-4"><i class="bi bi-currency-dollar"></i> Asignar Salario</h2>
                <form asp-action="Create" method="post" class="needs-validation" novalidate>
                    <input type="hidden" name="empNo" value="@Model" />
                    <div class="form-floating mb-3">
                        <input name="amount" type="number" step="0.01" min="0" class="form-control" placeholder="Monto" required />
                        <label for="amount">Monto</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input name="fromDate" type="date" class="form-control" required />
                        <label for="fromDate">Fecha de Inicio</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input name="to_date" type="date" class="form-control" />
                        <label for="to_date">Fecha de Fin (opcional)</label>
                    </div>
                    <div class="d-flex justify-content-end mt-4">
                        <a asp-controller="Employees" asp-action="Details" asp-route-id="@Model" class="btn btn-outline-secondary me-2">
                            <i class="bi bi-arrow-left"></i> Cancelar
                        </a>
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-save"></i> Guardar
                        </button>
                    </div>
                </form>
                @if (ViewData.ModelState.ErrorCount > 0)
                {
                    <div class="alert alert-danger mt-3">
                        <i class="bi bi-exclamation-triangle-fill"></i>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <div>@error.ErrorMessage</div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
    (function () {
        'use strict'
        var forms = document.querySelectorAll('.needs-validation')
        Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }
                form.classList.add('was-validated')
            }, false)
        })
    })()
    </script>
}
